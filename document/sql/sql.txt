-- テーブルが存在していたら削除する
DROP TABLE IF EXISTS Orders cascade;
DROP TABLE IF EXISTS OrderItems cascade;
DROP TABLE IF EXISTS Items cascade;
DROP TABLE IF EXISTS Sets cascade;
DROP TABLE IF EXISTS OrderStatuses cascade;
DROP TABLE IF EXISTS PaymentMethods cascade;
DROP TABLE IF EXISTS Addresses cascade;
DROP TABLE IF EXISTS Users cascade;
DROP TABLE IF EXISTS Destinations cascade;


-- テーブルを作成
CREATE TABLE Users (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    email TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    zipcode VARCHAR(20) NOT NULL,
    prefecture TEXT NOT NULL,
    municipalities TEXT NOT NULL,
    address TEXT NOT NULL,
    telephone VARCHAR(20) NOT NULL
);

CREATE TABLE Addresses (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES Users(id),
    zipcode VARCHAR(20) NOT NULL,
    prefecture VARCHAR(20) NOT NULL,
	municipalities TEXT NOT NULL,
    address TEXT NOT NULL,
    telephone VARCHAR(20) NOT NULL
);

CREATE TABLE PaymentMethods (
    id SERIAL PRIMARY KEY,
    method_name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE OrderStatuses (
    id INTEGER PRIMARY KEY,
    status_name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE Orders (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES Users(id),
    status_id INTEGER NOT NULL REFERENCES OrderStatuses(id),
    total_price INTEGER NOT NULL CHECK (total_price >= 0),
    order_date TIMESTAMP NOT NULL,
    payment_method_id INTEGER NOT NULL REFERENCES PaymentMethods(id),
    delivery_date DATE NOT NULL,
    address_id INTEGER NOT NULL REFERENCES Addresses(id)
);

CREATE TABLE Destinations (
    order_id INTEGER NOT NULL REFERENCES Orders(id),
    destination_name TEXT NOT NULL,
    destination_email TEXT NOT NULL,
    address_id INTEGER NOT NULL REFERENCES Addresses(id)
);

CREATE TABLE OrderItems (
    id SERIAL PRIMARY KEY,
    order_id INTEGER NOT NULL REFERENCES Orders(id),
    item_id INTEGER NOT NULL,
    quantity INTEGER NOT NULL CHECK (quantity > 0),
    size CHAR(1) NOT NULL
);

-- 商品テーブルを作成するためのSQLコード
CREATE TABLE Items (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price INT NOT NULL,
    item_type VARCHAR(50) NOT NULL CHECK (item_type IN ('top', 'bottom', 'set')),
    image_path VARCHAR(255)
);

-- セット商品テーブルを作成するためのSQLコード
CREATE TABLE Sets (
    id SERIAL PRIMARY KEY,
    item_id INT NOT NULL,
    top_id INT NOT NULL,
    bottom_id INT NOT NULL,
    FOREIGN KEY (item_id) REFERENCES Items(id),
    FOREIGN KEY (top_id) REFERENCES Items(id),
    FOREIGN KEY (bottom_id) REFERENCES Items(id)
);

-- Usersにデータを挿入する
INSERT INTO Users (name, email, password, zipcode, prefecture, municipalities, address, telephone) VALUES
('イオ', 'userone@example.com', 'password1', '123-4567', '東京都', '市町村X', '1番地', '080-1234-5678'),
('ハツ', 'usertwo@example.com', 'password2', '234-5678', '奈良県', '市町村Y', '2番地', '080-2345-6789'),
('ヤス', 'userthree@example.com', 'password3', '345-6789', '千葉県', '市町村Z', '3番地', '080-3456-7890');

-- Addressesにデータを挿入する
INSERT INTO Addresses (user_id, zipcode, prefecture, municipalities, address, telephone)
VALUES
(1, '123-4567', '東京都', '渋谷区', '渋谷1-2-3', '03-1234-5678'),
(2, '234-5678', '大阪府', '難波', '難波4-5-6', '06-2345-6789'),
(3, '345-6789', '京都府', '祇園', '祇園7-8-9', '075-3456-7890');

-- PaymentMethodsテーブルにデータを挿入する
INSERT INTO PaymentMethods (method_name)
VALUES
('代引き'),
('クレジットカード')
;

-- OrderStatusesテーブルにデータを挿入する
INSERT INTO OrderStatuses (id, status_name)
VALUES
(0,'注文前'),
(1,'未入金'),
(2,'入金済'),
(3,'発送済'),
(4,'配送完了'),
(9,'キャンセル');

-- Ordersテーブルにデータを挿入
INSERT INTO Orders (user_id, status_id, total_price, order_date, payment_method_id, delivery_date, address_id)
VALUES
(1, 1, 2500, '2024-06-21 10:00:00', 1, '2024-06-25', 1),
(2, 2, 3000, '2024-06-22 12:30:00', 2, '2024-06-26', 2),
(3, 1, 1800, '2024-06-23 09:45:00', 1, '2024-06-27', 3),
(1, 3, 3500, '2024-06-24 14:15:00', 1, '2024-06-28', 2),
(2, 1, 4000, '2024-06-25 16:20:00', 1, '2024-06-29', 1);


-- Destinationsテーブルに5件の具体的なデータを挿入
INSERT INTO Destinations (order_id, destination_name, destination_email, address_id) VALUES
(1, '配送太郎', 'haisou@example.com', 1),
(2, '洋服次郎', 'youhuku@example.com', 2),
(3, 'サイト三郎', 'site@example.com', 3);



-- OrderItemsテーブルに具体的なデータを挿入
INSERT INTO OrderItems (order_id, item_id, quantity, size) VALUES
(1, 1, 2, 'M'),
(1, 2, 1, 'L'),
(1, 3, 1, 'S'),
(2, 4, 3, 'M'),
(2, 5, 1, 'S'),
(3, 1, 1, 'L'),
(3, 3, 2, 'M'),
(4, 2, 2, 'S'),
(4, 4, 1, 'M'),
(4, 5, 3, 'L'),
(5, 3, 2, 'S'),
(5, 5, 1, 'M'),
(5, 1, 3, 'L'),
(5, 2, 1, 'S'),
(5, 4, 2, 'M');



-- Itemsテーブルにトップスのデータを10件挿入する
INSERT INTO Items (name, description, price, item_type, image_path)
VALUES
('オフィスシャツ ブルー', '清潔感のあるブルーのオフィスシャツ。落ち着いた色合いでビジネスシーンに最適です。', 3000, 'top', 'image01.png'),
('オフィスシャツ ピンク', '柔らかなピンク色のオフィスシャツ。明るく親しみやすい印象を与え、オフィスでも好印象です。', 3500, 'top', 'image02.png'),
('オフィスシャツ チェック グレー', 'シックなグレーのチェック柄オフィスシャツ。上品で洗練されたデザインが特徴です。', 2500, 'top', 'image03.png'),
('オフィスシャツ チェック レッド', '鮮やかなレッドのチェック柄オフィスシャツ。個性的なデザインで、目を引くスタイルを演出します。', 4000, 'top', 'image04.png'),
('オフィスシャツ チェック ブラック', 'クールなブラックのチェック柄オフィスシャツ。プロフェッショナルな印象を与える一着です。', 4500, 'top', 'image05.png'),
('オフィスシャツ ストライプ グレー', 'モダンなグレーのストライプ柄オフィスシャツ。スマートなビジネスカジュアルスタイルにぴったりです。', 2500, 'top', 'image06.png'),
('オフィスシャツ ホワイト 半袖', '清潔感のあるホワイトの半袖オフィスシャツ。夏のビジネスシーンで快適に過ごせます。', 3000, 'top', 'image07.png'),
('オフィスカーディガン ネイビー', 'エレガントなネイビーのオフィスカーディガン。冷房対策にも便利なアイテムです。', 3500, 'top', 'image08.png'),
('オフィスシャツ グリーン', '爽やかなグリーンのオフィスシャツ。リフレッシュ感を与え、オフィスでの好印象をサポートします。', 4000, 'top', 'image09.png'),
('オフィスシャツ 襟なし ホワイト', 'シンプルな襟なしホワイトのオフィスシャツ。ミニマルなデザインで、洗練されたスタイルに。', 4500, 'top', 'image10.png');


-- Itemsテーブルにボトムスのデータを10件挿入する
INSERT INTO Items (name, description, price, item_type, image_path)
VALUES
('スラックス グレー チェック', '洗練されたグレーのチェック柄スラックス。ビジネスシーンで活躍する上品なデザインです。', 6000, 'bottom', 'image11.png'),
('スラックス ネイビー', 'クラシックなネイビーのスラックス。オフィスカジュアルにぴったりのシンプルなデザインです。', 4500, 'bottom', 'image12.png'),
('スラックス ベージュ', '落ち着いたベージュのスラックス。カジュアルからフォーマルまで幅広く使えるデザインです。', 4000, 'bottom', 'image13.png'),
('ワイドパンツ ネイビー', 'スタイリッシュなネイビーのワイドパンツ。快適な着心地でオフィススタイルを格上げします。', 4500, 'bottom', 'image14.png'),
('スキニージーンズ ブルー', 'スタイリッシュなブルーのスキニージーンズ。オフィスでもカジュアルに着こなせる一着です。', 5500, 'bottom', 'image15.png'),
('ワイドパンツ ホワイト', '清潔感のあるホワイトのワイドパンツ。シンプルでエレガントなオフィススタイルを演出します。', 5000, 'bottom', 'image16.png'),
('スラックス グレー', 'シンプルで落ち着いたグレーのスラックス。オフィスカジュアルに最適なアイテムです。', 3500, 'bottom', 'image17.png'),
('ワイドパンツ ベージュ', 'エレガントなベージュのワイドパンツ。快適でスタイリッシュなオフィススタイルを実現します。', 5000, 'bottom', 'image18.png'),
('スラックス ライトグリーン', '爽やかなライトグリーンのスラックス。明るい色合いでオフィスに彩りを加えます。', 4000, 'bottom', 'image19.png'),
('スラックス ネイビー チェック', 'シックなネイビーチェックのスラックス。ビジネスシーンに最適で、フォーマルな印象を与えます。', 3500, 'bottom', 'image20.png');


-- Itemsテーブルにセットのデータを10件挿入する
INSERT INTO Items (name, description, price, item_type, image_path)
VALUES
('オフィスシャツ ブルー & スラックス グレー チェック', '清潔感のあるブルーのオフィスシャツと洗練されたグレーのチェック柄スラックスのセットです。', 9000, 'set', 'image21.png'),
('オフィスシャツ ピンク & スラックス ネイビー', '柔らかなピンク色のオフィスシャツとクラシックなネイビーのスラックスのセット。ビジネスシーンに最適です。', 10000, 'set', 'image22.png'),
('オフィスシャツ チェック グレー & スラックス ベージュ', 'シックなグレーのチェック柄オフィスシャツと落ち着いたベージュのスラックスのセット。上品で洗練されたスタイル。', 11000, 'set', 'image23.png'),
('オフィスシャツ チェック レッド & ワイドパンツ ネイビー', '鮮やかなレッドのチェック柄オフィスシャツとスタイリッシュなネイビーのワイドパンツのセット。個性的なビジネスカジュアル。', 12000, 'set', 'image24.png'),
('オフィスシャツ チェック ブラック & スキニージーンズ ブルー', 'クールなブラックのチェック柄オフィスシャツとスタイリッシュなブルーのスキニージーンズのセット。カジュアルなオフィススタイル。', 13000, 'set', 'image25.png'),
('オフィスシャツ ストライプ グレー & ワイドパンツ ホワイト', 'モダンなグレーのストライプ柄オフィスシャツと清潔感のあるホワイトのワイドパンツのセット。エレガントなオフィススタイル。', 14000, 'set', 'image26.png'),
('オフィスシャツ ホワイト 半袖 & スラックス グレー', '清潔感のあるホワイトの半袖オフィスシャツとシンプルで落ち着いたグレーのスラックスのセット。夏に最適なビジネススタイル。', 15000, 'set', 'image27.png'),
('オフィスカーディガン ネイビー & ワイドパンツ ベージュ', 'エレガントなネイビーのオフィスカーディガンとエレガントなベージュのワイドパンツのセット。快適でスタイリッシュ。', 9000, 'set', 'image28.png'),
('オフィスシャツ グリーン & スラックス ライトグリーン', '爽やかなグリーンのオフィスシャツと爽やかなライトグリーンのスラックスのセット。明るい色合いでオフィスに彩りを。', 10000, 'set', 'image29.png'),
('オフィスシャツ 襟なし ホワイト & スラックス ネイビー チェック', 'シンプルな襟なしホワイトのオフィスシャツとシックなネイビーチェックのスラックスのセット。洗練されたスタイル。', 11000, 'set', 'image30.png');



-- Setテーブルにセットの値を挿入する
INSERT INTO Sets (item_id, top_id, bottom_id)
VALUES
(21, 1, 11),
(22, 2, 12),
(23, 3, 13),
(24, 4, 14),
(25, 5, 15),
(26, 6, 16),
(27, 7, 17),
(28, 8, 18),
(29, 9, 19),
(30, 10, 20);



-- OrderItemsテーブルの全データを表示
SELECT * FROM OrderItems;

-- Ordersテーブルの全データを表示
SELECT * FROM Orders;

-- Setsテーブルの全データを表示
SELECT * FROM Sets;

-- Itemsテーブルの全データを表示
SELECT * FROM Items;

-- OrderStatusesテーブルの全データを表示
SELECT * FROM OrderStatuses;

-- PaymentMethodsテーブルの全データを表示
SELECT * FROM PaymentMethods;

-- Addressesテーブルの全データを表示
SELECT * FROM Addresses;

-- Usersテーブルの全データを表示
SELECT * FROM Users;

-- Destinationsテーブルの全データを表示
SELECT * FROM Destinations;